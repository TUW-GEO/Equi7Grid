name: ubuntu

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *" # daily

jobs:
  build:
    name: Build py${{ matrix.python-version }} @ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.12"]
        os: ["ubuntu-latest"]
        ymlfile: ["environment.yml"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false # does not work with self-hosted testdata
      - name: install libtiff dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y libtiff-dev
          sudo ln -s /usr/lib/x86_64-linux-gnu/libtiff.so.6 /usr/lib/x86_64-linux-gnu/libtiff.so.5
      - name: Checkout test data
        shell: bash -l {0}
        run : |
          git submodule init
          git submodule sync
          git submodule update
      - uses: conda-incubator/setup-miniconda@v2.0.1
        with:
          miniforge-variant: Mambaforge
          miniforge-version: "latest"
          channel-priority: flexible
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.ymlfile }}
          activate-environment: equi7grid
          auto-activate-base: false
      - name: Print infos
        shell: bash -l {0}
        run: |
          git status
          conda info -a
          conda list
          pip list
          which pip
          which python
      - name: Export Environment
        shell: bash -l {0}
        run: |
          mkdir -p .artifacts
          filename=env_py${{ matrix.python-version }}_${{ matrix.os }}.yml
          conda env export --no-builds | grep -v "prefix" > .artifacts/$filename
      - name: Install package and test
        shell: bash -l {0}
        run: |
          pip install -e .[testing]
          pytest --cache-clear
      - name: Upload Coverage
        shell: bash -l {0}
        run: |
          pip install coveralls && coveralls --service=github-actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
      - name: Create wheel and dist package
        shell: bash -l {0}
        run: |
          git status
          pip install setuptools_scm
          python setup.py sdist --dist-dir .artifacts/dist
          ls .artifacts/dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: .artifacts/*
  coveralls:
    name: Submit Coveralls
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls && coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
